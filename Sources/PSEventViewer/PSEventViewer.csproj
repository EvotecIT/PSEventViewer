<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net472;netstandard2.0;net8.0</TargetFrameworks>
        <Description>PowerShell Module for working with Event Logs</Description>
        <AssemblyName>PSEventViewer</AssemblyName>
        <AssemblyTitle>PSEventViewer</AssemblyTitle>
        <VersionPrefix>2.1.0</VersionPrefix>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <Company>Evotec</Company>
        <Authors>Przemyslaw Klys</Authors>
        <LangVersion>latest</LangVersion>
        <IsWindows>true</IsWindows>
        <SupportedOSPlatform>windows</SupportedOSPlatform>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="PowerShellStandard.Library" Version="5.1.1" PrivateAssets="all" />
    </ItemGroup>
  <ItemGroup>
      <ProjectReference Include="..\EventViewerX\EventViewerX.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net472' or '$(TargetFramework)' == 'netstandard2.0' ">
      <PackageReference Include="System.Text.Json" Version="9.0.0" />
  </ItemGroup>

    <!-- Make sure the output DLL's from library are included in the output -->
    <PropertyGroup>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    </PropertyGroup>

    <ItemGroup>
        <Using Include="System.Collections" />
        <Using Include="System.Management.Automation" />
        <Using Include="System.Threading.Tasks" />
        <Using Include="System.Collections.Concurrent" />
        <Using Include="System.Threading" />
        <Using Include="System" />
        <Using Include="System.Collections.Generic" />
        <Using Include="System.Linq" />
        <Using Include="System.Text" />
        <Using Include="System.IO" />
        <Using Include="System.Net" />
        <Using Include="System.Diagnostics" />
        <Using Include="EventViewerX" />
    </ItemGroup>

    <!-- We need to remove PowerShell conflicting libraries as it will break output -->
    <Target Name="RemoveFilesAfterBuild" AfterTargets="Build">
        <Delete Files="$(OutDir)System.Management.Automation.dll"
                Condition="Exists('$(OutDir)System.Management.Automation.dll')" />
        <Delete Files="$(OutDir)System.Management.dll"
                Condition="Exists('$(OutDir)System.Management.Automation.dll')" />
    </Target>

    <PropertyGroup>
        <!-- This is needed for XmlDoc2CmdletDoc to generate a PowerShell documentation file. -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
    </PropertyGroup>

    <ItemGroup>
        <!-- This is needed for XmlDoc2CmdletDoc to generate a PowerShell documentation file. -->
        <PackageReference Include="MatejKafka.XmlDoc2CmdletDoc" Version="0.6.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <!-- Copy help documentation to publish output after publish -->
    <Target Name="CopyHelpDocumentationToPublishOutput" AfterTargets="Publish">
        <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll-Help.xml"
            DestinationFiles="$(PublishDir)$(AssemblyName).dll-Help.xml"
            Condition="Exists('$(OutputPath)$(AssemblyName).dll-Help.xml')" />
    </Target>

</Project>